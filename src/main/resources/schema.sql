DROP ALL OBJECTS;

create table if not exists MPA
(
    MPA_ID   INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    MPA_NAME CHARACTER VARYING(20) not null
);

create table if not exists FILMS
(
    FILM_ID      INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    FILM_NAME    CHARACTER VARYING(100) not null,
    DESCRIPTION  CHARACTER VARYING(200) not null,
    RELEASE_DATE DATE                   not null,
    DURATION     INTEGER                not null,
    MPA_ID INTEGER,

    CONSTRAINT FK_MPA_ID FOREIGN KEY (MPA_ID) REFERENCES MPA(MPA_ID)
);

create unique index if not exists FILMS_ID_UNQ
    on FILMS (FILM_ID);

create table if not exists USERS
(
    USER_ID   INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    USER_NAME CHARACTER VARYING(100) not null,
    LOGIN     CHARACTER VARYING(50)  not null,
    EMAIL     CHARACTER VARYING(200) not null,
    BIRTHDAY  DATE
);

create unique index if not exists USERS_ID_UNQ
    on USERS (USER_ID);

create table if not exists FRIENDS
(
    USER_ID INT REFERENCES USERS (USER_ID) ON DELETE CASCADE,
    FRIEND_ID INT REFERENCES USERS (USER_ID) ON DELETE CASCADE,
    UNIQUE  (USER_ID, FRIEND_ID)
);

create table if not exists GENRES
(
    GENRE_ID   INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    GENRE_NAME CHARACTER VARYING(20) not null
);

create table if not exists LIKES
(
    USER_ID INT REFERENCES USERS (USER_ID) ON DELETE CASCADE,
    FILM_ID INT REFERENCES FILMS (FILM_ID) ON DELETE CASCADE,
    UNIQUE  (FILM_ID, USER_ID)
);

create table if not exists FILM_GENRES
(
    FILM_ID  INT REFERENCES FILMS (FILM_ID) ON DELETE CASCADE,
    GENRE_ID INT REFERENCES GENRES (GENRE_ID) ON DELETE CASCADE
);
